{
  "name": "JFix",
  "tagline": "Semantics-based repair for Java programs",
  "body": "### Welcome to JFix - semantics-based repair for Java programs.\r\nJFix is a semantics-based repair for Java programs. It translates and extends its counterpart [Angelix](https://github.com/mechtaev/angelix), which originally works on C programs. JFix is designed to work on Java-specific bugs such as bugs related to method calls. It is also able to handle other various types of bugs, including assignments, if-conditions, loop-conditions, and guards.\r\n\r\nJFix performs selective symbolic execution against test cases to collect error-free execution paths and the corresponding path conditions. It then solves the path conditions to infer specifications that prevent the program under repair from test failures. The inferred specifications can be used by a number of repair synthesis engines to synthesize repairs.\r\n \r\n### Eclipse plugin\r\nJFix can repair buggy programs with the push of a button. It is integrated into the Eclipse programming environment with a plugin that suggests fixes to the buggy programs, allowing developers to inspect, modify, and approve the suggested fixes.\r\n\r\n### Installation and Tutorial\r\nComing soon.\r\n\r\n### Developer\r\n[LE, Dinh Xuan Bach](https://sites.google.com/site/xuanbach0789/home)\r\nUnder the supervision of [David Lo](http://www.mysmu.edu/faculty/davidlo/)\r\n### Collaborators\r\n[Duc Hiep Chu](https://www.comp.nus.edu.sg/~chuduchi/),\r\n[Claire Le Goues](https://clairelegoues.com/),\r\n[Willem Visser](http://www.cs.sun.ac.za/~wvisser/).\r\n\r\n\r\n### Support or Contact\r\nEmail to: bachldx@gmail.com\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}